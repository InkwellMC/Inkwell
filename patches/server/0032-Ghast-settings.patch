From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Wed, 3 Apr 2024 20:29:34 +0300
Subject: [PATCH] Ghast settings


diff --git a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
index 3158d69ece3a4bd3905b53c70b75d3f76d681473..eae77aecfd17715e2e5ba26e1d1fc81bd6e3051c 100644
--- a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
+++ b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
@@ -197,6 +197,19 @@ public class InkwellConfig {
         endermanAllowGriefing = getBoolean("entity.enderman.allow-griefing", true);
     }
 
+    public static int ghastExplosionPower;
+    public static int ghastPreShootSoundTick;
+    public static int ghastShootTick;
+    public static int ghastChargingTick;
+    public static int ghastResetChargingTick;
+    private static void ghastSettings() {
+        ghastExplosionPower = getInt("entity.ghast.explosion-power", 1);
+        ghastPreShootSoundTick = getInt("entity.ghast.pre-shoot-sound-tick", 10);
+        ghastShootTick = getInt("entity.ghast.shoot-tick", 20);
+        ghastChargingTick = getInt("entity.ghast.charging-tick", 10);
+        ghastResetChargingTick = getInt("entity.ghast.reset-to-charging-tick", -40);
+    }
+
     public static boolean allowSignColors;
     private static void blockEntity() {
         allowSignColors = getBoolean(
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ghast.java b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
index c135bc245f59a1af706f98b9d140dee77016b12f..c5f9a3f050e4953071ee0f78a78dd4a80d51ea34 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ghast.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
@@ -37,7 +37,7 @@ import org.joml.Vector3f;
 public class Ghast extends FlyingMob implements Enemy {
 
     private static final EntityDataAccessor<Boolean> DATA_IS_CHARGING = SynchedEntityData.defineId(Ghast.class, EntityDataSerializers.BOOLEAN);
-    private int explosionPower = 1;
+    private int explosionPower = io.inkwellmc.inkwell.InkwellConfig.ghastExplosionPower;
 
     public Ghast(EntityType<? extends Ghast> type, Level world) {
         super(type, world);
@@ -337,11 +337,11 @@ public class Ghast extends FlyingMob implements Enemy {
                     Level world = this.ghast.level();
 
                     ++this.chargeTime;
-                    if (this.chargeTime == 10 && !this.ghast.isSilent()) {
+                    if (this.chargeTime == io.inkwellmc.inkwell.InkwellConfig.ghastPreShootSoundTick && !this.ghast.isSilent()) {
                         world.levelEvent((Player) null, 1015, this.ghast.blockPosition(), 0);
                     }
 
-                    if (this.chargeTime == 20) {
+                    if (this.chargeTime == io.inkwellmc.inkwell.InkwellConfig.ghastShootTick) {
                         double d1 = 4.0D;
                         Vec3 vec3d = this.ghast.getViewVector(1.0F);
                         double d2 = entityliving.getX() - (this.ghast.getX() + vec3d.x * 4.0D);
@@ -358,13 +358,13 @@ public class Ghast extends FlyingMob implements Enemy {
                         entitylargefireball.bukkitYield = entitylargefireball.explosionPower = this.ghast.getExplosionPower();
                         entitylargefireball.setPos(this.ghast.getX() + vec3d.x * 4.0D, this.ghast.getY(0.5D) + 0.5D, entitylargefireball.getZ() + vec3d.z * 4.0D);
                         world.addFreshEntity(entitylargefireball);
-                        this.chargeTime = -40;
+                        this.chargeTime = io.inkwellmc.inkwell.InkwellConfig.ghastResetChargingTick;
                     }
                 } else if (this.chargeTime > 0) {
                     --this.chargeTime;
                 }
 
-                this.ghast.setCharging(this.chargeTime > 10);
+                this.ghast.setCharging(this.chargeTime > io.inkwellmc.inkwell.InkwellConfig.ghastChargingTick);
             }
         }
     }
