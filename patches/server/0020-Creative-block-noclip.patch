From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Sat, 20 Jan 2024 18:57:27 +0300
Subject: [PATCH] Creative block noclip


diff --git a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
index 2323ff847b2ab2b0c7f325d6682a6f2c8abf6b16..0fd70a9ed7f82220b1dd917c97a36e612854b511 100644
--- a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
+++ b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
@@ -222,4 +222,9 @@ public class InkwellConfig {
         mobFlamesLiveTime = getInt("mobs.flames.live-time", 160);
         mobFlameAllowGriefing = getBoolean("mobs.flames.allow-griefing", true);
     }
+
+    public static boolean playerCreativeBlockNoclip;
+    private static void playerSettings() {
+        playerCreativeBlockNoclip = getBoolean("player.creative-block-noclip", false, "Allows noclip blocks in creative");
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 448a6c8d73652824157c50cf4883d4d4d9b5db80..22fddd66f45e721f7071500ecad129286b7b8522 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -250,8 +250,8 @@ public abstract class Player extends LivingEntity {
 
     @Override
     public void tick() {
-        this.noPhysics = this.isSpectator();
-        if (this.isSpectator()) {
+        this.noPhysics = this.isCreativeOrSpectator(); // Inkwell - creative no clip
+        if (this.isCreativeOrSpectator()) { // Inkwell - creative no clip
             this.setOnGround(false);
         }
 
@@ -430,7 +430,7 @@ public abstract class Player extends LivingEntity {
 
             Pose entitypose1;
 
-            if (!this.isSpectator() && !this.isPassenger() && !this.canPlayerFitWithinBlocksAndEntitiesWhen(entitypose)) {
+            if (!this.isCreativeOrSpectator() && !this.isPassenger() && !this.canPlayerFitWithinBlocksAndEntitiesWhen(entitypose)) { // Inkwell - creative no clip
                 if (this.canPlayerFitWithinBlocksAndEntitiesWhen(Pose.CROUCHING)) {
                     entitypose1 = Pose.CROUCHING;
                 } else {
@@ -577,7 +577,7 @@ public abstract class Player extends LivingEntity {
         }
 
         this.bob += (f - this.bob) * 0.4F;
-        if (this.getHealth() > 0.0F && !this.isSpectator()) {
+        if (this.getHealth() > 0.0F && !this.isCreativeOrSpectator()) { // Inkwell - creative no clip
             AABB axisalignedbb;
 
             if (this.isPassenger() && !this.getVehicle().isRemoved()) {
@@ -2107,6 +2107,20 @@ public abstract class Player extends LivingEntity {
     @Override
     public abstract boolean isSpectator();
 
+    // Inkwell start - creative no clip
+    public boolean isCreativeOrSpectator() {
+        return isSpectator() || (io.inkwellmc.inkwell.InkwellConfig.playerCreativeBlockNoclip && isCreative());
+    }
+    public boolean canSpectatingPlace(Level world, BlockState state, BlockPos pos, net.minecraft.world.phys.shapes.CollisionContext context) {
+        if (this.isCreativeOrSpectator()) {
+            net.minecraft.world.phys.shapes.VoxelShape voxelShape = state.getCollisionShape(world, pos, context);
+            return voxelShape.isEmpty() || world.isUnobstructed(this, voxelShape.move(pos.getX(), pos.getY(), pos.getZ()));
+        } else {
+            return world.isUnobstructed(state, pos, context);
+        }
+    }
+    // Inkwell end - creative no clip
+
     @Override
     public boolean canBeHitByProjectile() {
         return !this.isSpectator() && super.canBeHitByProjectile();
diff --git a/src/main/java/net/minecraft/world/item/BlockItem.java b/src/main/java/net/minecraft/world/item/BlockItem.java
index 96fb69ec6db2e7c8c728435f0c537b076259b2fb..c6b94e2cbac39041572549f0084e56f30557282c 100644
--- a/src/main/java/net/minecraft/world/item/BlockItem.java
+++ b/src/main/java/net/minecraft/world/item/BlockItem.java
@@ -187,8 +187,8 @@ public class BlockItem extends Item {
         Player entityhuman = context.getPlayer();
         CollisionContext voxelshapecollision = entityhuman == null ? CollisionContext.empty() : CollisionContext.of(entityhuman);
         // CraftBukkit start - store default return
-        Level world = context.getLevel(); // Paper - Cancel hit for vanished players
-        boolean defaultReturn = (!this.mustSurvive() || state.canSurvive(context.getLevel(), context.getClickedPos())) && world.checkEntityCollision(state, entityhuman, voxelshapecollision, context.getClickedPos(), true); // Paper - Cancel hit for vanished players
+        Level world = context.getLevel(); // Paper
+        boolean defaultReturn = (!this.mustSurvive() || state.canSurvive(context.getLevel(), context.getClickedPos())) && (io.inkwellmc.inkwell.InkwellConfig.playerCreativeBlockNoclip && context.getPlayer() != null ? context.getPlayer().canSpectatingPlace(world, state, context.getClickedPos(), voxelshapecollision) : world.checkEntityCollision(state, entityhuman, voxelshapecollision, context.getClickedPos(), true)); // Paper - Cancel hit for vanished players // Inkwell - creative no clip
         org.bukkit.entity.Player player = (context.getPlayer() instanceof ServerPlayer) ? (org.bukkit.entity.Player) context.getPlayer().getBukkitEntity() : null;
 
         BlockCanBuildEvent event = new BlockCanBuildEvent(CraftBlock.at(context.getLevel(), context.getClickedPos()), player, CraftBlockData.fromData(state), defaultReturn, org.bukkit.craftbukkit.CraftEquipmentSlot.getHand(context.getHand())); // Paper - Expose hand in BlockCanBuildEvent
diff --git a/src/main/java/net/minecraft/world/item/StandingAndWallBlockItem.java b/src/main/java/net/minecraft/world/item/StandingAndWallBlockItem.java
index f8f909ebdad5e96379e8bd8c610164ef0697368e..7b2ec2fde9002ff75ac6cace75fb3beb0680ee40 100644
--- a/src/main/java/net/minecraft/world/item/StandingAndWallBlockItem.java
+++ b/src/main/java/net/minecraft/world/item/StandingAndWallBlockItem.java
@@ -56,7 +56,7 @@ public class StandingAndWallBlockItem extends BlockItem {
 
         // CraftBukkit start
         if (iblockdata1 != null) {
-            boolean defaultReturn = world.isUnobstructed(iblockdata1, blockposition, CollisionContext.empty());
+            boolean defaultReturn = context.getPlayer() != null ? context.getPlayer().canSpectatingPlace(world, iblockdata1, blockposition, CollisionContext.empty()) : world.isUnobstructed(iblockdata1, blockposition, CollisionContext.empty()); // Inkwell - creative no clip
             org.bukkit.entity.Player player = (context.getPlayer() instanceof ServerPlayer) ? (org.bukkit.entity.Player) context.getPlayer().getBukkitEntity() : null;
 
             BlockCanBuildEvent event = new BlockCanBuildEvent(CraftBlock.at(world, blockposition), player, CraftBlockData.fromData(iblockdata1), defaultReturn, org.bukkit.craftbukkit.CraftEquipmentSlot.getHand(context.getHand())); // Paper - Expose hand in BlockCanBuildEvent
diff --git a/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
index 0d68db20f5fbe5e834f12c1e8fd429099a44e4b6..7d4e9591689f6bfcb4575443fd590e341deb7dbf 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
@@ -163,7 +163,7 @@ public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity impl
                 while (iterator.hasNext()) {
                     Entity entity = (Entity) iterator.next();
 
-                    if (entity.getPistonPushReaction() != PushReaction.IGNORE) {
+                    if (entity.getPistonPushReaction() != PushReaction.IGNORE  && !(entity instanceof Player player && player.isCreativeOrSpectator())) { // Inkwell - creative no clip
                         entity.move(MoverType.SHULKER_BOX, new Vec3((axisalignedbb.getXsize() + 0.01D) * (double) enumdirection.getStepX(), (axisalignedbb.getYsize() + 0.01D) * (double) enumdirection.getStepY(), (axisalignedbb.getZsize() + 0.01D) * (double) enumdirection.getStepZ()));
                     }
                 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
index 04743a3e8546655e769442744c32a4c54425fc55..c01c5ee93aa3b1a42f81d3433efc19ff9b0a5201 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
@@ -120,7 +120,7 @@ public class TheEndGatewayBlockEntity extends TheEndPortalBlockEntity {
     }
 
     public static boolean canEntityTeleport(Entity entity) {
-        return EntitySelector.NO_SPECTATORS.test(entity) && !entity.getRootVehicle().isOnPortalCooldown() && entity.canPortalAsync(true); // Folia - region threading - correct portal check
+        return EntitySelector.NO_SPECTATORS.test(entity) && !entity.getRootVehicle().isOnPortalCooldown() && entity.canPortalAsync(true) && !(entity instanceof net.minecraft.world.entity.player.Player player && player.isCreativeOrSpectator()); // Folia - region threading - correct portal check // Inkwell - creative no clip
     }
 
     public boolean isSpawning() {
diff --git a/src/main/java/net/minecraft/world/level/block/piston/PistonMovingBlockEntity.java b/src/main/java/net/minecraft/world/level/block/piston/PistonMovingBlockEntity.java
index 58b570cfdd52b414752b5a117946d59031eafe94..d5ba3779a5185249e9d76a0dc261d283496d292c 100644
--- a/src/main/java/net/minecraft/world/level/block/piston/PistonMovingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/piston/PistonMovingBlockEntity.java
@@ -157,7 +157,7 @@ public class PistonMovingBlockEntity extends BlockEntity {
                                         h = (double)direction.getStepZ();
                                 }
 
-                                entity.setDeltaMovement(e, g, h);
+                                if (!(entity instanceof net.minecraft.world.entity.player.Player player) || !player.isCreativeOrSpectator()) entity.setDeltaMovement(e, g, h); // Inkwell - creative no clip
                                 // Paper - EAR items stuck in in slime pushed by a piston
                                 entity.activatedTick = Math.max(entity.activatedTick, io.papermc.paper.threadedregions.RegionizedServer.getCurrentTick() + 10); // Folia - region threading
                                 entity.activatedImmunityTick = Math.max(entity.activatedImmunityTick, io.papermc.paper.threadedregions.RegionizedServer.getCurrentTick() + 10); // Folia - region threading
@@ -193,6 +193,7 @@ public class PistonMovingBlockEntity extends BlockEntity {
     }
 
     private static void moveEntityByPiston(Direction direction, Entity entity, double distance, Direction movementDirection) {
+        if (entity instanceof net.minecraft.world.entity.player.Player player && player.isCreativeOrSpectator()) return; // Inkwell - creative no clip
         NOCLIP.set(direction);
         entity.move(
             MoverType.PISTON,
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 96201b5b458d8e0cbebf586062fac1ec2d81fdd0..43948665a26f7754afa5b3375b16cf198a9ef851 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -172,7 +172,6 @@ import org.bukkit.event.player.PlayerExpCooldownChangeEvent;
 import org.bukkit.event.player.PlayerHideEntityEvent;
 import org.bukkit.event.player.PlayerRegisterChannelEvent;
 import org.bukkit.event.player.PlayerShowEntityEvent;
-import org.bukkit.event.player.PlayerSpawnChangeEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerUnregisterChannelEvent;
 import org.bukkit.inventory.EquipmentSlot;
@@ -3531,4 +3530,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public void setSendViewDistance(final int viewDistance) {
         this.getHandle().setSendViewDistance(viewDistance);
     }
+
+    //Inkwell start
+    @Override
+    public boolean isCreativeOrSpectator() {
+        return this.getHandle().isCreativeOrSpectator();
+    }
+    // Inkwell end
 }
