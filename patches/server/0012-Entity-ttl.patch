From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Sat, 30 Dec 2023 22:59:21 +0300
Subject: [PATCH] Entity ttl


diff --git a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
index 043063f8939060cae92c9b3fa8cc986f3bdb9671..98f0af8a6c5fb1dc71a14cb9b777513bd2d4f13f 100644
--- a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
+++ b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
@@ -5,7 +5,11 @@ import java.io.IOException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 import java.util.List;
+import java.util.Locale;
+
+import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.world.entity.EntityType;
 import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.configuration.MemoryConfiguration;
 import org.jetbrains.annotations.Nullable;
@@ -184,4 +188,20 @@ public class InkwellConfig {
     private static void miscSettings() {
         disableOutOfOrderChat = getBoolean("misc.disable-out-of-order-chat", true);
     }
+
+    public static Map<String, Integer> projectileTimeouts;
+    private static void projectileTimeouts() {
+        getInt("entity_timeouts.SNOWBALL", -1);
+        getInt("entity_timeouts.LLAMA_SPIT", -1);
+        setComment("entity_timeouts",
+                "These values define a entity's maximum lifespan. If an",
+                "entity is in this list and it has survived for longer than",
+                "that number of ticks, then it will be removed. Setting a value to",
+                "-1 disables this feature.");
+
+        for (EntityType<?> entityType : BuiltInRegistries.ENTITY_TYPE) {
+        		String type = EntityType.getKey(entityType).getPath().toUpperCase(Locale.ROOT);
+        		entityType.ttl = config.getInt("entity_timeouts." + type, -1);
+        }
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index f2b775d7d48f14dec7d84c59b0dc97535f5f527c..b6cd9a00716812023b5d9c016127f5010eb85e48 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -856,6 +856,12 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
 
     public void tick() {
+        // Inkwell start - entity TTL
+        if (type != EntityType.PLAYER && type.ttl >= 0 && this.tickCount >= type.ttl) {
+            discard(EntityRemoveEvent.Cause.DESPAWN);
+            return;
+        }
+        // Inkwell end - entity TTL
         this.baseTick();
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/EntityType.java b/src/main/java/net/minecraft/world/entity/EntityType.java
index a2f0fb8b4057bd3a84d18298e49c4d02955240d3..e291a71dfa3e619c18141411d2cb79ab02da9cef 100644
--- a/src/main/java/net/minecraft/world/entity/EntityType.java
+++ b/src/main/java/net/minecraft/world/entity/EntityType.java
@@ -316,6 +316,7 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     private final boolean canSpawnFarFromPlayer;
     private final int clientTrackingRange;
     private final int updateInterval;
+    public int ttl = -1; // Inkwell
     @Nullable
     private String descriptionId;
     @Nullable
