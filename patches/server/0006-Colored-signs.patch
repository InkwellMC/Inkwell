From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <mia.krs3007@yandex.ru>
Date: Sun, 3 Dec 2023 23:14:15 +0300
Subject: [PATCH] Colored signs


diff --git a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
index 523f03db4cefb295ceedcef7a5c816bb3774fe53..6fe731ed6dac4ed781260717b3dbf89b2979a45c 100644
--- a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
+++ b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
@@ -139,4 +139,9 @@ public class InkwellConfig {
     private static void villager() {
         allowVoidTrading = getBoolean("entity.villager.allow-void-trading", false, "Allows you to interact with merchants in unloaded chunks");
     }
+
+    public static boolean allowSignColors;
+    private static void blockEntity() {
+        allowSignColors = getBoolean("blockentity.allow-sign-colors", false, "Allows to parse colors on signs.");
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 08980763020a13ab49dc7d637625a4fba56da8c9..3bf14ff5b5c12540703a958026e5bde031913c5a 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1538,6 +1538,7 @@ public class ServerPlayer extends Player {
 
     @Override
     public void openTextEdit(SignBlockEntity sign, boolean front) {
+        if (io.inkwellmc.inkwell.InkwellConfig.allowSignColors) this.connection.send(sign.getTranslatedUpdatePacket(textFilteringEnabled, front)); // Inkwell
         this.connection.send(new ClientboundBlockUpdatePacket(this.level(), sign.getBlockPos()));
         this.connection.send(new ClientboundOpenSignEditorPacket(sign.getBlockPos(), front));
     }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/SignBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/SignBlockEntity.java
index 38cde466714e5663cd416b6afd5d2558e139ec09..f5632eb37e86a64320850630ef51f25e76a2e130 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/SignBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/SignBlockEntity.java
@@ -202,16 +202,30 @@ public class SignBlockEntity extends BlockEntity implements CommandSource { // C
         return this.setText((SignText) textChanger.apply(signtext), front);
     }
 
+    // Inkwell start
+    private Component translateColors(org.bukkit.entity.Player player, String line, Style style) {
+        if (io.inkwellmc.inkwell.InkwellConfig.allowSignColors) {
+            if (player.hasPermission("inkwell.sign.color")) line = line.replaceAll("(?i)&([0-9a-fr])", "\u00a7$1");
+            if (player.hasPermission("inkwell.sign.style")) line = line.replaceAll("(?i)&([l-or])", "\u00a7$1");
+            if (player.hasPermission("inkwell.sign.magic")) line = line.replaceAll("(?i)&([kr])", "\u00a7$1");
+            return io.papermc.paper.adventure.PaperAdventure.asVanilla(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(line));
+        } else {
+            return Component.literal(line).setStyle(style);
+        }
+    }
+    // Inkwell end
+
     private SignText setMessages(net.minecraft.world.entity.player.Player entityhuman, List<FilteredText> list, SignText signtext, boolean front) { // CraftBukkit
         SignText originalText = signtext; // CraftBukkit
         for (int i = 0; i < list.size(); ++i) {
             FilteredText filteredtext = (FilteredText) list.get(i);
             Style chatmodifier = signtext.getMessage(i, entityhuman.isTextFilteringEnabled()).getStyle();
 
+            Player player = (org.bukkit.craftbukkit.entity.CraftPlayer) entityhuman.getBukkitEntity(); // Inkwell
             if (entityhuman.isTextFilteringEnabled()) {
-                signtext = signtext.setMessage(i, Component.literal(net.minecraft.SharedConstants.filterText(filteredtext.filteredOrEmpty())).setStyle(chatmodifier)); // Paper - filter sign text to chat only
+                signtext = signtext.setMessage(i, translateColors(player, net.minecraft.SharedConstants.filterText(filteredtext.filteredOrEmpty()), chatmodifier)); // Paper - filter sign text to chat only // Inkwell
             } else {
-                signtext = signtext.setMessage(i, Component.literal(net.minecraft.SharedConstants.filterText(filteredtext.raw())).setStyle(chatmodifier), Component.literal(net.minecraft.SharedConstants.filterText(filteredtext.filteredOrEmpty())).setStyle(chatmodifier)); // Paper - filter sign text to chat only
+                signtext = signtext.setMessage(i, translateColors(player, net.minecraft.SharedConstants.filterText(filteredtext.raw()), chatmodifier), translateColors(player, net.minecraft.SharedConstants.filterText(filteredtext.filteredOrEmpty()), chatmodifier)); // Paper - filter sign text to chat only // Inkwell
             }
         }
 
@@ -351,6 +365,28 @@ public class SignBlockEntity extends BlockEntity implements CommandSource { // C
         return ClientboundBlockEntityDataPacket.create(this);
     }
 
+    // Inkwell start
+    public ClientboundBlockEntityDataPacket getTranslatedUpdatePacket(boolean filtered, boolean front) {
+        final CompoundTag nbt = new CompoundTag();
+        this.saveAdditional(nbt);
+        final Component[] lines = front ? frontText.getMessages(filtered) : backText.getMessages(filtered);
+        final String side = front ? "front_text" : "back_text";
+        for (int i = 0; i < 4; i++) {
+            final var component = io.papermc.paper.adventure.PaperAdventure.asAdventure(lines[i]);
+            final String line = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacyAmpersand().serialize(component);
+            final var text = net.kyori.adventure.text.Component.text(line);
+            final String json = net.kyori.adventure.text.serializer.gson.GsonComponentSerializer.gson().serialize(text);
+            if (!nbt.contains(side)) nbt.put(side, new CompoundTag());
+            final CompoundTag sideNbt = nbt.getCompound(side);
+            if (!sideNbt.contains("messages")) sideNbt.put("messages", new net.minecraft.nbt.ListTag());
+            final net.minecraft.nbt.ListTag messagesNbt = sideNbt.getList("messages", Tag.TAG_STRING);
+            messagesNbt.set(i, net.minecraft.nbt.StringTag.valueOf(json));
+        }
+        nbt.putString("InkwellEditor", "true");
+        return ClientboundBlockEntityDataPacket.create(this, entity -> nbt);
+    }
+    // Inkwell end
+
     @Override
     public CompoundTag getUpdateTag() {
         return this.saveWithoutMetadata();
