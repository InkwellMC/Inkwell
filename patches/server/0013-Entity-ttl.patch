From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Sat, 30 Dec 2023 22:59:21 +0300
Subject: [PATCH] Entity ttl


diff --git a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
index 643dce1207fae4fccb808147319638e8c753bd64..cd975090d2b84694a9debe1f38137ad0527ea067 100644
--- a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
+++ b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
@@ -6,6 +6,8 @@ import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 import java.util.Collections;
 import java.util.List;
+import java.util.Locale;
+import java.util.Map;
 
 import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.server.MinecraftServer;
@@ -215,4 +217,20 @@ public class InkwellConfig {
     private static void miscSettings() {
         disableOutOfOrderChat = getBoolean("misc.disable-out-of-order-chat", true);
     }
+
+    public static Map<String, Integer> projectileTimeouts;
+    private static void projectileTimeouts() {
+        getInt("entity_timeouts.SNOWBALL", -1);
+        getInt("entity_timeouts.LLAMA_SPIT", -1);
+        setComment("entity_timeouts",
+                "These values define a entity's maximum lifespan. If an",
+                "entity is in this list and it has survived for longer than",
+                "that number of ticks, then it will be removed. Setting a value to",
+                "-1 disables this feature.");
+
+        for (EntityType<?> entityType : BuiltInRegistries.ENTITY_TYPE) {
+        		String type = EntityType.getKey(entityType).getPath().toUpperCase(Locale.ROOT);
+        		entityType.ttl = config.getInt("entity_timeouts." + type, -1);
+        }
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 3230ebf89347715bc1ab1057eeec7bbf49604dbd..14c63f5abc0e6d3a833061a165d3bcad0fbfb7fa 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -817,6 +817,12 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
     }
 
     public void tick() {
+        // Inkwell start - entity TTL
+        if (type != EntityType.PLAYER && type.ttl >= 0 && this.tickCount >= type.ttl) {
+            discard(EntityRemoveEvent.Cause.DESPAWN);
+            return;
+        }
+        // Inkwell end - entity TTL
         this.baseTick();
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/EntityType.java b/src/main/java/net/minecraft/world/entity/EntityType.java
index 51a987256b254fa18b354ae0a014b67b43bd11e7..dd61bd1f94778d0370e293439fe91d6e8be25fd5 100644
--- a/src/main/java/net/minecraft/world/entity/EntityType.java
+++ b/src/main/java/net/minecraft/world/entity/EntityType.java
@@ -306,6 +306,7 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     private final int clientTrackingRange;
     private final int updateInterval;
     public boolean dabEnabled = false; // Inkwell
+    public int ttl = -1; // Inkwell
     @Nullable
     private String descriptionId;
     @Nullable
