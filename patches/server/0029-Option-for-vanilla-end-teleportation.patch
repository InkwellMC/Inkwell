From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Mon, 25 Mar 2024 18:23:16 +0300
Subject: [PATCH] Option for vanilla end teleportation


diff --git a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
index 427edf335238698dbf9bf931219eac401a1ac1a6..1e8fce6e19903164477bef832c628ccf2419700f 100644
--- a/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
+++ b/src/main/java/io/inkwellmc/inkwell/InkwellConfig.java
@@ -212,10 +212,12 @@ public class InkwellConfig {
     public static boolean disableOutOfOrderChat;
     public static int pistonPushLimit;
     public static boolean snowballKnockbackPlayer;
+    public static boolean useVanillaEndTeleportation;
     private static void miscSettings() {
         disableOutOfOrderChat = getBoolean("misc.disable-out-of-order-chat", true);
         pistonPushLimit = getInt("misc.piston-push-limit", 12, "The number of blocks the piston can move. The default is 12.");
         snowballKnockbackPlayer = getBoolean("misc.snowball-knockback-player", false, "Value defines can snowball kockback player");
+        useVanillaEndTeleportation = getBoolean("misc.vanilla-end-teleportation", false, "This can fix wither platform obsidian farm");
     }
 
     public static Map<String, Integer> projectileTimeouts;
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index cc835707ae85ee11846f9c4a9a51e7b294ef69fb..cceaac4ebab8404aedb165cb6fb3def4ddf31527 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -4207,9 +4207,17 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
 
                             // the portal obsidian is placed at targetPos.y - 2, so if we want to place the entity
                             // on the obsidian, we need to spawn at targetPos.y - 1
-                            portalInfoCompletable.complete(
-                                new PortalInfo(Vec3.atBottomCenterOf(targetPos.below()), Vec3.ZERO, 90.0f, 0.0f, destination, null)
-                            );
+                            // Inkwell start
+                            if (io.inkwellmc.inkwell.InkwellConfig.useVanillaEndTeleportation) {
+                                Vec3 finalPos = this instanceof Player ? Vec3.atBottomCenterOf(targetPos.below()) : Vec3.atBottomCenterOf(targetPos);
+                                portalInfoCompletable.complete(
+                                    new PortalInfo(finalPos, this.getDeltaMovement(), 90.0f, 0.0f, destination, null)
+                                );
+                            } else {
+                                portalInfoCompletable.complete(
+                                    new PortalInfo(Vec3.atBottomCenterOf(targetPos.below()), Vec3.ZERO, 90.0f, 0.0f, destination, null)
+                                );
+                            } // Inkwell end
                         }
                     );
                 } else {
