From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Sat, 30 Dec 2023 23:54:15 +0300
Subject: [PATCH] Simpler ShaplessRecipes comparsion for Vanilla


diff --git a/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java b/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java
index 2e60bdc44c33d434bfd9ca5bf8f75de799c6768c..332616474eba6f019ab2ff160dccf1c2bf0cef02 100644
--- a/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java
+++ b/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java
@@ -27,8 +27,15 @@ public class ShapelessRecipe extends io.papermc.paper.inventory.recipe.RecipeBoo
     final CraftingBookCategory category;
     final ItemStack result;
     final NonNullList<Ingredient> ingredients;
+    private final boolean isBukkit; // Inkwell
 
+    // Inkwell start
     public ShapelessRecipe(ResourceLocation id, String group, CraftingBookCategory category, ItemStack output, NonNullList<Ingredient> input) {
+        this(id, group, category, output, input, false);
+    }
+    public ShapelessRecipe(ResourceLocation id, String group, CraftingBookCategory category, ItemStack output, NonNullList<Ingredient> input, boolean isBukkit) {
+        this.isBukkit = isBukkit;
+    // Inkwell end
         this.id = id;
         this.group = group;
         this.category = category;
@@ -83,6 +90,25 @@ public class ShapelessRecipe extends io.papermc.paper.inventory.recipe.RecipeBoo
     }
 
     public boolean matches(CraftingContainer inventory, Level world) {
+        // Inkwell start
+        if (!this.isBukkit) {
+            java.util.List<Ingredient> ingredients = com.google.common.collect.Lists.newArrayList(this.ingredients.toArray(new Ingredient[0]));
+            inventory: for (int index = 0; index < inventory.getContainerSize(); index++) {
+                ItemStack itemStack = inventory.getItem(index);
+                if (!itemStack.isEmpty()) {
+                    for (int i = 0; i < ingredients.size(); i++) {
+                        if (ingredients.get(i).test(itemStack)) {
+                            ingredients.remove(i);
+                            continue inventory;
+                        }
+                    }
+                    return false;
+                }
+            }
+            return ingredients.isEmpty();
+        }
+        // Inkwell end
+
         StackedContents autorecipestackmanager = new StackedContents();
         autorecipestackmanager.initialize(this); // Paper - better exact choice recipes
         int i = 0;
diff --git a/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java.rej b/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java.rej
new file mode 100644
index 0000000000000000000000000000000000000000..5f5543850ed5e604a94d31ced7cb1c2fad9e998a
--- /dev/null
+++ b/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java.rej
@@ -0,0 +1,17 @@
+diff a/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java b/src/main/java/net/minecraft/world/item/crafting/ShapelessRecipe.java	(rejected hunks)
+@@ -26,8 +26,15 @@ public class ShapelessRecipe extends io.papermc.paper.inventory.recipe.RecipeBoo
+     final CraftingBookCategory category;
+     final ItemStack result;
+     final NonNullList<Ingredient> ingredients;
++    private final boolean isBukkit; // Inkwell
+ 
++    // Inkwell start
+     public ShapelessRecipe(String group, CraftingBookCategory category, ItemStack result, NonNullList<Ingredient> ingredients) {
++        this(group, category, result, ingredients, false);
++    }
++    public ShapelessRecipe(String group, CraftingBookCategory category, ItemStack result, NonNullList<Ingredient> ingredients, boolean isBukkit) {
++        this.isBukkit = isBukkit;
++    // Inkwell end
+         this.group = group;
+         this.category = category;
+         this.result = result;
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java.rej b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java.rej
new file mode 100644
index 0000000000000000000000000000000000000000..224a92cc497c7264e48d48896b21382f5807c30d
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java.rej
@@ -0,0 +1,9 @@
+diff a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java	(rejected hunks)
+@@ -45,6 +45,6 @@ public class CraftShapelessRecipe extends ShapelessRecipe implements CraftRecipe
+             data.set(i, this.toNMS(ingred.get(i), true));
+         }
+ 
+-        MinecraftServer.getServer().getRecipeManager().addRecipe(new RecipeHolder<>(CraftNamespacedKey.toMinecraft(this.getKey()), new net.minecraft.world.item.crafting.ShapelessRecipe(this.getGroup(), CraftRecipe.getCategory(this.getCategory()), CraftItemStack.asNMSCopy(this.getResult()), data)));
++        MinecraftServer.getServer().getRecipeManager().addRecipe(new RecipeHolder<>(CraftNamespacedKey.toMinecraft(this.getKey()), new net.minecraft.world.item.crafting.ShapelessRecipe(this.getGroup(), CraftRecipe.getCategory(this.getCategory()), CraftItemStack.asNMSCopy(this.getResult()), data, true))); // Inkwell
+     }
+ }
